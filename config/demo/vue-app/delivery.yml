apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: vue-app
  annotations:
    ootb.apps.tanzu.vmware.com/servicebinding-workload: "true"
    ootb.apps.tanzu.vmware.com/apidescriptor-ref: "true"
    kapp.k14s.io/change-rule: upsert after upserting servicebinding.io/ServiceBindings
  labels:
    app.kubernetes.io/part-of: vue-app
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/workload-type: web
    app.kubernetes.io/component: run
    carto.run/workload-name: vue-app
spec:
  template:
    metadata:
      annotations:
        apps.tanzu.vmware.com/debug: "true"
        apps.tanzu.vmware.com/live-update: "true"
        autoscaling.knative.dev/minScale: "1"
        conventions.carto.run/applied-conventions: |-
          appliveview-sample/app-live-view-appflavour-check
          developer-conventions/add-source-image-label
          spring-boot-convention/auto-configure-actuators-check
          spring-boot-convention/app-live-view-appflavour-check
        developer.apps.tanzu.vmware.com/image-source-digest: tapdemoacr.azurecr.io/taptest:latest@sha256:a0143d964b661d88d44ccd19d19f388a790b9f1345392d8e98760f9f8a0fe375
        developer.conventions/target-containers: workload
      labels:
        app.kubernetes.io/component: run
        app.kubernetes.io/part-of: vue-app
        apps.tanzu.vmware.com/has-tests: "true"
        apps.tanzu.vmware.com/workload-type: web
        carto.run/workload-name: vue-app
    spec:
      containers:
      - image: tapdemoacr.azurecr.io/taptest/workloads/vue-app-demo@sha256:4cc90338efc40e2fd105970b6ca33ff4428974592a958ad0740413d3116fad31
        name: workload
        resources: {}
        securityContext:
          runAsUser: 1000
      serviceAccountName: default

